service: cupido-api

package:
  individually: true

plugins:
  - serverless-bundle 
  - serverless-offline
  - serverless-dotenv-plugin 

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:service}-messages

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-1

 
  environment:
    tableName: ${self:custom.tableName}
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
     
      Resource:
        - "Fn::GetAtt": [ MessagesTable, Arn ]

functions:
  create:
    handler: create.newMessage
    events:
      - http:
          path: messages
          cors: true
          method: post
          authorizer: aws_iam

  get: 
    handler: get.getMessage
    events:
      - http:
          path: messages/{id}
          cors: true
          method: get
          authorizer: aws_iam
  
  list:
    handler: list.listMessages
    events:
      - http:
          path: messages
          cors: true
          method: get
          authorizer: aws_iam
  
  update:
    handler: update.editMessage
    events:
      - http:
          path: messages/{id}
          cors: true
          method: put
          authorizer: aws_iam

  delete:
    handler: delete.deleteMessage
    events:
      - http:
          path: messages/{id}
          cors: true
          method: delete
          authorizer: aws_iam

  email:
    handler: email.sendEmail
    events:
      - http:
          path: email
          cors: true
          method: post
          authorizer: aws_iam

resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/s3-bucket.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  



